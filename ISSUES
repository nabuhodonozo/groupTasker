#From now on ima write down problems I have ecountered so far and mby add solutions to them
#(My learning purposes and kinda future notes)

1. Think wisely about database plan (deleting stuff rn is painful)
2. All operations based on @pathvariables are not the best idea due to security etc.
    * workaround rn is that some of those operations are sent via "forms and post method"
        * normally they would be just get method and hypelink to this (but NO, cuz smbdy could just type this in prowser)
        * So rn it's just sent via logged user and form post method ... but it's dirty fix I think ajax or smthing should be used instead
    * I think using ajax in this case would be more useful than more controllers and mapping methods
3. Dont put everything in the same controller (it was supposed to be temporary, but now it became one big mess)
4. JPA querries issues need tweaking, rn using java workaround aka. dirty fix
5. Cant pass to jsp comments to specific task, cuz i'd need new queery for each task.... unless I use js then its need fix
    * Took me 2 days to realise I can make bidirectional relationship. Working good even without js. (Maby not good performance wise, but for now I skip DB design part)
6. Moving to spring boot took some time and effort to make it working. (I should have probably started with spring boot, but I gained experience so now I know how it looks with and without spring boot)
7. //FIXME
    make userDTO, cuz rn password has 20 chars, so either validation wont work or database wont accept hashed password
8. //fixme since user as a principal is stored in session anyway so prolly I should make "User... impements UserDetailsService" and UserPrincipal extends User //but if I change smthing in process I'd have to update this user in session too (bad idea)
